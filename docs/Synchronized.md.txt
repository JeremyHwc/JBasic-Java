# Synchronized全面解读

一、概述

- synchronized简介：作用、地位、不控制并发的后果；
- 两种用法：对象锁和类锁；
- 多线程访问同步方法的7种情况：是否是static、synchronized方法等;
- synchronized的性质：可重入、不可中断；
- 原理：加解锁原理、可重入原理、可见性原理；
- synchronized的缺陷：效率低、不够灵活、无法预判是否成功获取到锁；
- 常见面试问题：使用注意点、如何选择Lock或synchronized等；
- 思考题：如何提高性能，JVM如何决定哪个线程获取锁等。

二、简介

同步方法支持一种简单的策略来防止线程干扰和内存一致性错误：如果一个对象对多个线程可见，则对该对象变量的所有读取或写入都是通过同步方法完成的。

一句话概括：能够保证在**同一时刻**最多只有**一个**线程执行该段代码，以达到保证并发安全的效果

synchronized是Java的关键字，被Java语言原生支持；

是最基本的互斥同步手段；

是并发编程中元老级角色，是并发编程的必学内容。



三、synchronized 两种用法

对象锁

包括方法锁（默认对象为this当前实例对象）和同步代码块锁（自己指定锁对象）。

代码块形式：手动指定对象

方法锁形式：synchronized修饰普通方法，锁对象默认为this

类锁

指synchronized修饰静态的方法或指定锁为Class对象。